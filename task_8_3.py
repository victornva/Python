'''
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
   Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
   Класс-исключение должен контролировать типы данных элементов списка.
   Примечание: длина списка не фиксирована.
   Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
   При этом скрипт завершается, сформированный список выводится на экран.
   Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
   При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
   только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
   соответствующее сообщение. При этом работа скрипта не должна завершаться.
'''
print("\nУрок 8 задание 3\n")

class DigList(Exception):

    def __init__(self):
        print('Это не число')

dig_list = []

while True:
    try:
        new_el = input("Введите число:\n")
        if new_el == 'stop':
            print(f"Список : {dig_list}\nBy!")
            exit()
        if new_el.isdigit() == False:
            raise DigList()
    except DigList as err:
        print('Ошибка ')
    else:
        dig_list.append(int(new_el))
        print(f"Список : {dig_list}\n")