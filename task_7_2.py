''' 2. Реализовать проект расчета суммарного расхода ткани на производство одежды.
Основная сущность (класс) этого проекта — одежда, которая может иметь определенное название.
К типам одежды в этом проекте относятся пальто и костюм.
У этих типов одежды существуют параметры: размер (для пальто) и рост (для костюма).
Это могут быть обычные числа: V и H, соответственно.
Для определения расхода ткани по каждому типу одежды использовать формулы:
для пальто (V/6.5 + 0.5), для костюма (2 * H + 0.3).
Проверить работу этих методов на реальных данных. Реализовать общий подсчет расхода ткани.
Проверить на практике полученные на этом уроке знания: реализовать абстрактные классы для основных классов проекта,
проверить на практике работу декоратора @property.
'''
print("\nУрок 7 задание 2\n")

from abc import ABC, abstractmethod

class AbstractClothes(ABC):

    @abstractmethod
    def fabric(self):
        pass

class Coat:

    def __init__(self, size):
        self.V = size

    @property
    def fabric(self):
        return self.V/6.5 + 0.5

class Suit:

    def __init__(self, high):
        self.H = high

    def fabric(self):
        return 2 * self.H + 0.3

# Допустим мы шьём пальто и костюмы из одной и той же ткани, и нам нужно 5 пальто и 6 костюмов разных размеров
# В классе пальто для доступа к методу рассчёта будем использовать декоратор, а для костюмов непосредственно сам метод

# шьём пальто:
c_48 = Coat(48)
c_50 = Coat(50)
c_52 = Coat(52)
c_54 = Coat(54)
c_56 = Coat(56)

# шьём костюмы (рост похоже в футах в этой формуле):
s_5_0 = Suit(5)
s_5_1 = Suit(5.5)
s_5_2 = Suit(5.5)
s_6_0 = Suit(6)
s_6_1 = Suit(6)
s_6_2 = Suit(6.5)

total_coat = c_48.fabric + c_50.fabric + c_52.fabric + c_54.fabric + c_56.fabric
print('На пальто потребуется материи:  ', total_coat)

total_suit = s_5_0.fabric() + 2 * s_5_1.fabric() + 2 * s_6_0.fabric() + s_6_2.fabric()
print('На костюмы потребуется материи: ', float('{:.1f}'.format(total_suit)))

print('Всего потребуется материи     : ', float('{:.1f}'.format(total_coat + total_suit)))
